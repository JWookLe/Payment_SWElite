services:
  mariadb:
    image: mariadb:11.4
    container_name: pay-mariadb
    environment:
      MARIADB_ROOT_PASSWORD: 4535
      MARIADB_DATABASE: paydb
      MARIADB_USER: payuser
      MARIADB_PASSWORD: paypass
    ports:
      - "3306:3306"
    volumes:
      - mariadb-data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h 127.0.0.1 -uroot -p4535 --silent || exit 1"]
      interval: 10s
      retries: 10
      timeout: 5s

  redis:
    image: redis:7.4-alpine
    container_name: pay-redis
    ports:
      - "6379:6379"

  zookeeper:
    image: zookeeper:3.9
    container_name: pay-zookeeper
    environment:
      ZOO_ALLOW_ANONYMOUS_LOGIN: "true"
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: pay-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

  ingest-service:
    build:
      context: .
      dockerfile: backend/ingest-service/Dockerfile
    image: ingest-service:local
    environment:
      PAYMENT_DB_HOST: mariadb
      PAYMENT_DB_PORT: 3306
      PAYMENT_DB_NAME: paydb
      PAYMENT_DB_USER: payuser
      PAYMENT_DB_PASSWORD: paypass
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      REDIS_HOST: redis
      APP_RATE_LIMIT_AUTHORIZE_CAPACITY: 1000
      APP_RATE_LIMIT_CAPTURE_CAPACITY: 1000
      APP_RATE_LIMIT_REFUND_CAPACITY: 500
      SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: 50
      SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE: 10
      SERVER_TOMCAT_THREADS_MAX: 400
    depends_on:
      mariadb:
        condition: service_healthy
      kafka:
        condition: service_started
      redis:
        condition: service_started
    ports:
      - "8080:8080"

  consumer-worker:
    build:
      context: .
      dockerfile: backend/consumer-worker/Dockerfile
    image: consumer-worker:local
    environment:
      PAYMENT_DB_HOST: mariadb
      PAYMENT_DB_PORT: 3306
      PAYMENT_DB_NAME: paydb
      PAYMENT_DB_USER: payuser
      PAYMENT_DB_PASSWORD: paypass
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      mariadb:
        condition: service_healthy
      kafka:
        condition: service_started

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: pay-prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - ingest-service
      - consumer-worker
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.4.3
    container_name: pay-grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
    depends_on:
      - prometheus
    ports:
      - "3000:3000"

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        VITE_API_BASE: http://localhost:8080
    image: mock-frontend:local
    environment:
      VITE_API_BASE: http://localhost:8080
    depends_on:
      - ingest-service
    ports:
      - "5173:80"

  jenkins:
    build:
      context: .
      dockerfile: jenkins/Dockerfile
    image: pay-jenkins:local
    container_name: pay-jenkins
    user: root
    ports:
      - "8088:8080"
      - "50000:50000"
    volumes:
      - ./jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  mariadb-data:
